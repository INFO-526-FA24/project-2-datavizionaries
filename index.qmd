---
title: "MindScope: Unveiling Patterns in Mental Health through Data-Driven Insights"
subtitle: ""
author: 
  - name: "Team Data Vizionaries"
    affiliations:
      - name: "College of Information Science, University of Arizona"
description: "Project 2 for INFO 526 course instructed by Prof. Anna Leach"
format:
  html:
    code-tools: true
    code-overflow: wrap
    code-line-numbers: false
    embed-resources: true
editor: visual
code-annotations: hover
execute:
  warning: false
---

## Abstract

We explore global mental health. There is never too much awareness on a vital topic like this.

## Introduction

::: {style="text-align: justify;"}
This project uses the ‘Mental Health Dataset’ sourced from Kaggle. It was prepared by Mr Bhavik Jikdara by extracting the required information from `<a href="`{=html}<https://ourworldindata.org/mental-health/>`" target="_blank">`{=html}Our World in Data</a> . The dataset contains a variety of features related to text analysis, psychological indicators, stress, isolation and behavioral attributes making it suitable to visualize and get insights into mental health. The data covers the time period between August 2014 and February 2016.

The dataset has a total of 17 columns: 1 datetime and 16 categorical variables. The categorical columns: Gender, Country, Occupation, self_employed, family_history, treatment, Days_Indoors, Growing_Stress, Changes_Habits, Mental_Health_History, Mood_Swings, Coping_Struggles, Work_Interest, Social_Weakness, mental_health_interview, care_options and the datetime column: Timestamp are both represented by the character data type in R. The dataset has 292364 entries and 17 columns indicating it has a dimension of 292364 x 17. The description of the columns is as follows:
:::

| **Column Name** | **Class** | **Description** |
|------------------------|------------------------|------------------------|
| Timestamp | character(datetime) | The timestamp at which an observation was recorded |
| Gender | character | Gender of the person(Male or Female) |
| Country | character | Country to which the person belongs to |
| Occupation | character | The occupation of the person |
| self_employed | character | Indicates whether the person works from themselves, has their own business(Yes or No) |
| family_history | character | History of mental health issues among family members(Yes or No) |
| treatment | character | Indicates whether a person is taking treatment for mental health issues. (Yes or No) |
| Days_Indoor | character |  |
| Growing_Stress | character | Indicates whether a person's stress level is increasing over time. (Yes or No) |
| Changes_Habits | character | It refers to changes in behavior or habits that may indicate shifts in mental health. |
| Mental_Health_History | character | Person’s mental health history |
| Mood_Swings | character | Fluctuations in a person's mood |
| Coping_Struggles | character | Difficulties a person may have in coping with mental health challenges. |
| Work_Interest | character | Indicates whether interested in doing work or not |
| Social_Weakness | character | Indicates difficulties in social interactions or relationships |
| mental_health_interview | character | Indicates whether the person would bring up the issue of mental health with potential employer in an interview |
| care_options | character | Indicates whether options are available for treatment of mental health issues, such as therapy, medication, or support groups. |

## Question 1:

## What correlations exist between coping difficulties, social weakness, and work interest in occupation and self-employment status? Does a person's or their family's history of mental health problems link with higher levels of mood swings, coping challenges and social fragility?

### Approach

::: {style="text-align: justify;"}
## Phase 1: Data Preprocessing

The initial phase of our analysis focuses on **data preprocessing**, a critical step to prepare the data for further analysis and modeling. In this phase, we will handle various data transformation tasks, starting with **categorical variables**. These variables, such as `Coping_Struggles`, `Social_Weakness`, `Work_Interest`, `Occupation`, and `self_employed`, will be converted into **factors** to facilitate their use in statistical modeling. Factors represent categorical data in R and help us interpret relationships between categories more effectively.

A key component of the preprocessing phase involves addressing **missing values**, which are common in real-world datasets. We'll apply a systematic approach to handle missingness:

-   **Minimal missing data (\< 5%)**: For features where the proportion of missing values is small, we will use imputation techniques. The choice between mean and median imputation will depend on the distribution of the variable. For numeric features, if the distribution is approximately normal, we will use the **mean** to impute missing values. For skewed distributions, we will use the **median** to better reflect the central tendency of the data without being affected by extreme values.

-   **Moderate missing data (5-30%)**: When the missing data falls within this range, we will explore two approaches. For some features, we might apply **multiple imputation**, where the missing values are predicted based on the relationships with other variables in the dataset. Alternatively, if the missing data is still manageable, we may choose to **remove** records that contain missing values. This decision will be made carefully to avoid losing too much data, especially when the missing values are distributed randomly rather than systematically.

-   **Substantial missing data (\> 30%)**: Features with more than 30% missing data will be critically evaluated for their importance in the analysis. We will assess whether these features are essential for the analysis or if they can be safely removed. If a feature is determined to be highly important but suffers from significant missing data, we might explore advanced techniques such as **model-based imputation** or even investigate external datasets to supplement missing information.

## Phase 2: Exploratory Data Analysis (EDA)

The second phase of our analysis involves **Exploratory Data Analysis (EDA)**, a critical step in identifying underlying patterns, relationships, and anomalies in the data. EDA allows us to uncover insights that will guide our modeling decisions and improve our understanding of the dataset.

During this phase, we will examine several key variables and their interactions:

-   **Coping_Struggles, Social_Weakness, and Work_Interest**: These variables will be analyzed across different **Occupations** and **employment statuses** (e.g., self-employed vs. non-self-employed). We will explore whether certain occupations or employment types are associated with higher or lower levels of coping struggles, social weakness, or work interest. This analysis will help us understand if certain job types or employment conditions influence individuals' mental health and work-related challenges.

-   **Family Mental Health History**: A significant relationship may exist between an individual’s **family mental health history** and their own coping struggles and social weakness. We will analyze this relationship to uncover any correlations or patterns. This analysis will provide insights into whether a family history of mental health issues increases the likelihood of experiencing similar challenges in coping or social interactions. The exploration of these relationships could reveal important psychological or environmental factors affecting individuals’ well-being.

We will also use visual techniques such as **box plots** or **density plots** to investigate the distribution of these variables and to visually assess any differences across subgroups. These visual tools will help us spot trends, outliers, or potential issues in the data that require further attention.

## Phase 3: Visualization and Communication of Findings

The final phase of the analysis focuses on **creating informative visualizations** to communicate the findings from our data exploration and analysis clearly and effectively. Visualizations not only provide an intuitive understanding of the data but also serve as powerful tools for decision-making and storytelling.

We will create several types of visualizations to summarize our key findings:

-   **Stacked Bar Plots**: To illustrate how `Coping_Struggles`, `Social_Weakness`, and `Work_Interest` are distributed across different **Occupations** and **employment statuses**. These plots will display the proportions of individuals experiencing various levels of coping struggles, social weakness, or work interest within each occupation or employment category. The stacked bars will make it easy to compare categories within a single visualization, helping us identify trends and differences across occupations or employment statuses.

-   **Heatmap of Correlations**: We will use **dplyr** and **ggplot2** to create a heatmap displaying the correlations between various **categorical variables**. This heatmap will help us identify patterns and associations between different factors, such as `Coping_Struggles`, `Social_Weakness`, `Work_Interest`, and employment categories. The use of color gradients in the heatmap will allow for an easy visual interpretation of the strength and direction of these relationships.

-   **Bar Plots for Self-Employed vs. Non-Self-Employed**: We will generate bar plots to compare the proportions of individuals experiencing `Coping_Struggles` and `Social_Weakness` between **self-employed** and **non-self-employed** individuals. This comparison will provide a clear visual representation of whether employment status plays a significant role in the prevalence of these mental health challenges. We will also examine whether the work-related factors such as autonomy or job insecurity in self-employment correlate with higher levels of coping struggles or social weakness.

By the end of this phase, we will have a comprehensive set of visualizations that not only summarize key aspects of the data but also highlight important relationships between variables. These visuals will be invaluable for communicating findings to stakeholders, supporting hypothesis testing, and guiding future analyses or interventions.

------------------------------------------------------------------------
:::

### Analysis

```{r}
# List of required packages
required_packages <- c("tidyverse", "skimr", "readr", "dplyr", "countrycode", "patchwork", 
                       "ggplot2", "ggiraph", "sf", "gganimate", "gridExtra","transformr","corrplot","tidyr","reshape2","janitor","jpeg","rnaturalearth","rnaturalearthdata","caret",
                      "pROC" )


# Function to check if a package is installed; if not, install it
install_if_missing <- function(pkg) {
  if (!requireNamespace(pkg, quietly = TRUE)) {
    message(paste("Installing package:", pkg))
    install.packages(pkg, dependencies = TRUE)
  } else {
    message(paste("Package", pkg, "is already installed"))
  }
}

# Apply the function to each package
invisible(lapply(required_packages, install_if_missing))

# Function to load all the required packages
load_packages <- function(pkg_list) {
  invisible(lapply(pkg_list, function(pkg) {
    library(pkg, character.only = TRUE)
  }))
}

load_packages(required_packages)
```

#### Plot 1-a

```{r}
# Load required libraries
library(dplyr)
library(readr)
library(ggplot2)
library(reshape2)
library(viridis)

# Read the data
df <- read_csv("./data/mental_health.csv")

# Convert column names to lowercase and replace spaces with underscores
names(df) <- tolower(names(df))
names(df) <- gsub(" ","_", names(df))

# Create a smaller dataframe with just the four variables of interest
df_selected <- data.frame(
  coping_struggles = ifelse(df$coping_struggles == "Yes", 1, 0),
  social_weakness = case_when(
    df$social_weakness == "Yes" ~ 2,
    df$social_weakness == "Maybe" ~ 1,
    df$social_weakness == "No" ~ 0
  ),
  work_interest = ifelse(df$work_interest == "Yes", 1, 0),
  self_employed = ifelse(df$self_employed == "Yes", 1, 0)
)

# Calculate correlation matrix
cor_matrix <- cor(df_selected, use = "complete.obs")

# Rename variables for multi-line labels  
colnames(cor_matrix) <- c("Coping\nStruggles", "Social\nWeakness", "Work\nInterest", "Self\nEmployed")  
rownames(cor_matrix) <- c("Coping\nStruggles", "Social\nWeakness", "Work\nInterest", "Self\nEmployed") 

# Melt the correlation matrix for ggplot
cor_melted <- reshape2::melt(cor_matrix)

# Keep only upper triangle of the correlation matrix  
cor_melted <- cor_melted[which(as.integer(cor_melted$Var1) <= as.integer(cor_melted$Var2)), ]  

# Create correlation plot
cor_plot <- ggplot(cor_melted, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile() +
  geom_text(aes(label = sprintf("%.2f", value)), 
            #color = ifelse(abs(cor_melted$value) > 0.5, "white", "black"), 
            size = 4) +
  # scale_fill_viridis(
  #   option = "viridis",
  #   limits = c(-1, 1),
  #   name = "Correlation"
  # ) +
  scale_fill_gradient(low = "#c8ac7d", high = "#555ba5")+
  theme_minimal() +
  theme(
    #axis.text.x = element_text(hjust = 1, size = 10, angle=90),
    axis.text.x = element_text(size=10),
    axis.text.y = element_text(size = 10),
    axis.title = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_blank(),
    panel.background = element_blank(),
    plot.title = element_text(hjust = 0.5, size = 14),
    legend.title = element_blank(),
  ) +
  ggtitle("Correlation Matrix of Mental Health Factors") +
  coord_fixed()

# Display the plot
(cor_plot)

# Save the plot
ggsave("new_selected_correlations.png", cor_plot, width = 8, height = 6, dpi = 500, path = "plots")
```

#### Plot 1-b

```{r}

data <- read.csv("data/mental_health.csv")

encode_ordinal <- function(x, order = unique(x)) {
  x <- as.numeric(factor(x, levels = order, exclude = NULL))
  x
}

data$Mood_Swings <- encode_ordinal(data$Mood_Swings, order = c("Low", "Medium", "High"))
data$Coping_Struggles <- encode_ordinal(data$Coping_Struggles, order = c("No", "Maybe", "Yes"))
data$Social_Weakness <- encode_ordinal(data$Social_Weakness, order = c("No", "Maybe", "Yes"))
data$Work_Interest <- encode_ordinal(data$Work_Interest, order = c("No", "Maybe", "Yes"))

summary_data <- data %>%
  group_by(Gender, family_history) %>%
  summarise(Average_Coping_Struggles = mean(Coping_Struggles), .groups = "drop")

coping_struggles <- ggplot(summary_data, aes(x = Gender, y = Average_Coping_Struggles, fill = family_history)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  scale_fill_manual(values = c("Yes" = "#ccad80", "No" = "#535aa3")) +
  labs(
    title = "Coping Struggles",
    x = "Gender",
    y = "Coping Struggles",
    fill = "Family History"
  ) +
  theme_minimal()
coping_struggles
```

#### Plot 1-c

```{r}
#| label: q1-c
#| include: true

summary_data <- data %>%
  group_by(Gender, family_history) %>%
  summarise(Average_Social_Weakness = mean(Social_Weakness), .groups = "drop")

social_weakness <- ggplot(summary_data, aes(x = Gender, y = Average_Social_Weakness, fill = family_history)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  scale_fill_manual(values = c("Yes" = "#ccad80", "No" = "#535aa3")) +
  labs(
    title = "Social Weakness",
    x = "Gender",
    y = "Social Weakness",
    fill = "Family History"
  ) +
  theme_minimal()
social_weakness
```

#### Plot 1-d

```{r}
#| include: true

summary_data <- data %>%
  group_by(Gender, family_history) %>%
  summarise(Average_Work_Interest = mean(Work_Interest), .groups = "drop")

work_interest <- ggplot(summary_data, aes(x = Gender, y = Average_Work_Interest, fill = family_history)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  scale_fill_manual(values = c("Yes" = "#ccad80", "No" = "#535aa3")) +
  labs(
    title = "Work Interest",
    x = "Gender",
    y = "Work Interest",
    fill = "Family History"
  ) +
  theme_minimal()
work_interest
```

#### Plot 1-e

```{r}
#| include: true

summary_data <- data %>%
  group_by(Gender, family_history) %>%
  summarise(Average_Mood_Swings = mean(Mood_Swings), .groups = "drop")

mood_swings <- ggplot(summary_data, aes(x = Gender, y = Average_Mood_Swings, fill = family_history)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  scale_fill_manual(values = c("Yes" = "#ccad80", "No" = "#535aa3")) +
  labs(
    title = "Mood Swings",
    x = "Gender",
    y = "Mood Swings",
    fill = "Family History"
  ) +
  theme_minimal()
mood_swings
```

#### Plot 1-f

```{r}
combined_plot <- (mood_swings + coping_struggles) / (work_interest + social_weakness)
combined_plot
```

### Discussion

::: {style="text-align:justify;"}
The image shows a correlation matrix heatmap between the four mental-health related variables: coping_struggles, social_weakness, work_interest and self_employed. The matrix uses a color schema ranging from yellow(1.0) to teal(0). Looking at the specific correlations, we can observe that each variable has perfect positive correlation(1.00) with itself, shown in yellow along the diagonal. However, the relationship between different variables is significantly weak or non-existent with values very close to zero. For instance, work_interest and social_weakness show a very slight negative correlation of -0.05, while coping_struggles and social_weakness have a minimal positive correlation of 0.01. The variable self-employed shows no correlation with any other factors. These observations indicate that these mental health factors are independent of each other.

Here we look at different aspects of life that may be affected by mental health. Our main goal is to see how much and in what ways family history of mental illness influences our mood, ability to cope, social interactions and our passion for work.Family history of mental illness seems to make mood swings less intensive, at least in women. There is no significant effect for male population.When it comes to coping abilities, the data indicates that women struggle more, but family history has virtually no effect on how well people can cope.When it comes to work, women again seem more sensitive to family history: in families with a history of mental illness women have more interest in work, whereas men not so much.Finally, social skills seem to be the very little affected by the history of mental illness, and there is also only a negligible difference between men and women.
:::

## Question 2:

## What is the distribution of mental health treatment-seeking across different demographics (e.g., gender, country, occupation)? Also, are there trends seen over time (based on Timestamp), such as increasing stress levels or changes in treatment-seeking behaviors?

### Approach

::: {style="text-align: justify;"}
The analytical approach for this project consists of three key phases: data preprocessing, exploratory data analysis (EDA), and visualization. These phases are designed to derive meaningful insights from the data and effectively communicate our findings.

The preprocessing phase will focus on preparing the data for analysis. Here, we have recorded the value "Housewife" in the "occupation" column as "Homemaker." Since we also have males in the dataset who help at home, it's only fair to be respectful of the available genders. Moreover, the timestamps available in the dataset will also be parsed using Lubridate to help with the analysis.

EDA will focus on identifying relationships and patterns within the data.

1.  Country-Level Analysis: Examine the distribution of mental health diagnosis rates across countries to identify regions with higher prevalence. This analysis will be complemented by a choropleth map that visually highlights these differences.

2.  Days Indoor vs. Diagnosed: Investigate the relationship between the number of days spent indoors and the proportion of individuals diagnosed with mental health issues. Bar plots will be used to compare distributions.

3.  Occupation vs. Diagnosed: Analyze how mental health diagnoses are distributed across different occupational categories. This will help uncover patterns related to specific types of work environments and mental health challenges.

To effectively communicate the findings, a series of tailored visualizations will be created:

1.  Choropleth Map: A world map illustrating the Diagnosed Rate across surveyed countries. The map will highlight variations with a custom gradient color scheme, making regional differences visually intuitive.

2.  Stacked Bar Charts: Stacked bar plots will be generated to show how diagnoses are distributed based on Days Indoor and Occupation, emphasizing comparisons between groups.

3.  Proportional Comparisons: Additional bar plots will compare diagnoses across specific groups, such as occupations or indoor activity patterns.
:::

### Time Series Analysis Approach

In the first phase, we apply **time series analysis** to examine the treatment rate over time. The `treatment_rate` data is transformed into a time series object (`ts_treatment`), where the starting year and month are derived from the dataset’s `Timestamp`, and the frequency is set to 12 to represent monthly data. We then decompose the time series into its **observed**, **trend**, **seasonal**, and **remainder** components using **STL decomposition** (`stl()`). This decomposition allows us to identify long-term trends, seasonal fluctuations, and random noise that may impact the treatment rate. The decomposition results are converted into a data frame, which is reshaped into a long format for easier plotting with **ggplot2**. The resulting graph, using `geom_line()`, displays each component separately, providing a clear visualization of how the treatment rate evolves over time, the underlying trends, periodic seasonality, and the residual noise. This approach helps identify critical patterns in the treatment rate and understand seasonal effects, contributing to more informed decision-making about healthcare interventions or resource allocation.

### Confusion Matrix Evaluation Approach

The second phase focuses on evaluating the **confusion matrix** of the classification model predicting whether individuals were diagnosed or not. First, we generate the confusion matrix using the `confusionMatrix()` function from the **caret** package, comparing predicted values (thresholded at 0.5) against the actual diagnoses. The confusion matrix is then converted into a data frame for easier manipulation and visualization. To present the matrix visually, a **heatmap** is created using **ggplot2**, where the frequencies of each prediction category (True Negatives, False Positives, False Negatives, and True Positives) are displayed as tiles. The color gradient is applied to represent the magnitude of counts, with textual labels added to enhance readability. This heatmap allows us to easily assess the performance of the classification model by visually highlighting areas of correct and incorrect predictions, helping identify potential improvements in model accuracy or areas where false positives or negatives might need further investigation.

Together, these visualizations provide a comprehensive approach to understanding the treatment rate over time and the performance of the classification model, guiding decision-making and model refinement.

### Analysis

```{r}
library(tidyverse)
library(janitor)
library(rnaturalearth)
library(rnaturalearthdata)
library(caret)
library(pROC)

# Reading dataset

data <- read.csv("data/mental_health.csv", header = TRUE)

# Clean data
data_clean <- data %>% 
  mutate(
    Timestamp = parse_date_time(
      Timestamp, orders = "mdy HM"
    ),
    diagnosed = ifelse(treatment == "Yes", 1, 0),
    Occupation = ifelse(Occupation == "Housewife", "Homemaker", Occupation)
  ) %>% within(., rm(treatment)) %>%
  filter(self_employed != "") %>%
  clean_names()
```

#### Country Plot

```{r}
#| warning: false
#| include: true


# Load a world map
world <- ne_countries(scale = "medium", returnclass = "sf")|>
  st_set_crs(4326)
country_distribution <- data_clean %>%
  group_by(country) %>%
  summarise(
    count = n(),
    diagnosed_rate = mean(diagnosed)
  )

# Join the summarized data with the world map
world_data <- world %>%
  left_join(country_distribution, by = c("name_long" = "country")) %>%
  filter(., name_long != "Antarctica")

# Plot the map
heatmap <- ggplot(data = world_data) +
  geom_sf(aes(fill = diagnosed_rate), color = "white", size = 0.1) +
  scale_fill_gradient(
    name = "Diagnosed Rate",
    low = "#D1AE82FF",  # Starting color
    high = "#5D3A9B", # Ending color
    na.value = "gray80"  # Color for missing data
  ) +
  labs(
    title = "Distribution of Diagnosed Cases by Country",
    subtitle = "Proportion of diagnosed individuals across surveyed countries"
  ) +
  theme(
    legend.position = "bottom",
    legend.key.width = unit(3, "cm"),
    legend.key.height = unit(0.5, "cm"),
    legend.text = element_text(size = 10),
    legend.title = element_text(size = 12, face = "bold"),
    panel.background = element_rect(fill = "lightblue")
  ) +
  guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5))

#ggsave("country_diagnosis.png", dpi = 350, path = "plots")
img <- jpeg::readJPEG("./images/heatmap.jpeg")
plot.new()
rasterImage(img, 0, 0, 1,0.9)
```

#### Occupation

```{r}
#| include: true

# Summarize the data
occupation_distribution <- data_clean %>%
  group_by(occupation, diagnosed) %>%
  summarise(count = n(), .groups = "drop") %>%
  mutate(diagnosed_label = ifelse(diagnosed == 1, "Yes", "No"))

# Plot the multiset bar chart
ggplot(occupation_distribution, aes(x = occupation, y = count, fill = diagnosed_label)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(
    aes(label = round(count, 1)), 
    position = position_dodge(width = 0.9), 
    vjust = -0.5, 
    size = 3
  ) +
  labs(
    title = "Distribution of Diagnosed by Occupation",
    x = "Occupation",
    y = "Count",
    fill = "Diagnosed"
  ) +
  scale_fill_manual(values = c("Yes" = "#D1AE82FF", "No" = "#5D3A9B")) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

ggsave("occupation.png", dpi = 350, path = "plots")
```

#### Days Indoor

```{r}
#| include: true

# Summarize the data
indoors_distribution <- data_clean %>%
  group_by(days_indoors, diagnosed) %>%
  summarise(count = n(), .groups = "drop") %>%
  mutate(diagnosed_label = ifelse(diagnosed == 1, "Yes", "No"))

# Plot the multiset bar chart
ggplot(indoors_distribution, aes(x = days_indoors, y = count, fill = diagnosed_label)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(
    aes(label = round(count, 1)), 
    position = position_dodge(width = 0.9), 
    vjust = -0.5, 
    size = 3
  ) +
  labs(
    title = "Distribution of Diagnosed by Days Indoor",
    x = "Days Indoor",
    y = "Count",
    fill = "Diagnosed"
  ) +
  scale_fill_manual(values = c("Yes" = "#D1AE82FF", "No" = "#5D3A9B")) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

ggsave("days_indoor.png", dpi = 350, path = "plots")
```

#### Time Series Decomposition

```{r}

library(tidyverse)
library(janitor)
library(rnaturalearth)
library(rnaturalearthdata)
library(caret)
library(pROC)

# Reading dataset

data <- read.csv("data/mental_health.csv", header = TRUE)

library(lubridate)

# Convert Timestamp to date-time format
data <- data %>%
  mutate(Timestamp = mdy_hm(Timestamp),                 # Parse Timestamp
         Occupation = ifelse(Occupation == "Housewife", "Homemaker", Occupation), # Rename Housewife
         diagnosed = ifelse(treatment == "Yes", 1, 0))  # Create diagnosed column


factor_columns <- c("Gender", "Country", "Occupation", "self_employed", 
                    "family_history", "treatment", "Growing_Stress", 
                    "Changes_Habits", "Mood_Swings", "Coping_Struggles", 
                    "Work_Interest", "Social_Weakness", 
                    "mental_health_interview", "care_options")

data[factor_columns] <- lapply(data[factor_columns], as.factor)


library(ggplot2)
library(forecast)

# Trends in Treatment Over Time
treatment_trends <- data %>%
  group_by(Timestamp) %>%
  summarize(treatment_rate = mean(diagnosed, na.rm = TRUE))

# Time Series Object for Treatment
ts_treatment <- ts(treatment_trends$treatment_rate, 
                   start = c(year(min(data$Timestamp)), month(min(data$Timestamp))), 
                   frequency = 12)


# Decompose the Time Series
decomp <- stl(ts_treatment, s.window = "periodic")

# Convert the decomposition to a data frame for ggplot
decomp_df <- data.frame(
  Time = time(ts_treatment),
  Observed = ts_treatment,
  Trend = decomp$time.series[, "trend"],
  Seasonal = decomp$time.series[, "seasonal"],
  Remainder = decomp$time.series[, "remainder"]
)

# Convert to long format for ggplot
decomp_long <- reshape2::melt(decomp_df, id.vars = "Time", variable.name = "Component", value.name = "Value")

# Plot using ggplot2
ggplot(decomp_long, aes(x = Time, y = Value, color = Component)) +
  geom_line(size = 0.55) +
  facet_wrap(~Component, ncol = 1, scales = "free_y") +
  scale_color_manual(values = c("Observed" = "black", "Trend" = "#555ba5", 
                                "Seasonal" = "#c8ac7d", "Remainder" = "#a93925")) +
  labs(
    title = "Seasonal Decomposition of Treatment Rate",
    x = "Time",
    y = "Value"
  ) +
  theme_minimal() +
  theme(
    strip.text = element_text(size = 12, face = "bold"),
    legend.position = "none" # Remove legend for clarity
  )

```

### Confusion Matrix HeatMap

```{r}

library(caret)

# Remove rows with missing values
data_clean <- data %>% drop_na(Gender, Country, Occupation, self_employed, family_history, diagnosed)

# Logistic Regression Model
logit_model <- glm(diagnosed ~ Gender + Country + Occupation + self_employed + family_history, 
                   data = data_clean, family = binomial())

# Predictive Performance
pred <- predict(logit_model, type = "response")

# Ensure the prediction and actual lengths match
confusionMatrix(
  as.factor(ifelse(pred > 0.5, 1, 0)), 
  as.factor(data_clean$diagnosed)
)

# Generate confusion matrix
conf_matrix <- confusionMatrix(as.factor(ifelse(pred > 0.5, 1, 0)), as.factor(data_clean$diagnosed))

# Convert confusion matrix to a data frame
conf_matrix_df <- as.data.frame(as.table(conf_matrix$table))

# Plot confusion matrix as heatmap
ggplot(conf_matrix_df, aes(x = Prediction, y = Reference, fill = Freq)) +
  geom_tile() +
  geom_text(aes(label = Freq), color = "white", size = 5) +
  scale_fill_gradient(low = "#c8ac7d", high = "#555ba5") +
  labs(
    title = "Confusion Matrix Heatmap",
    x = "Predicted",
    y = "Actual"
  ) +
  theme_minimal()

```

### Discussion

::: {style="text-align:justify;"}
Occupation may play a role in diagnosis outcomes. For example, homemakers may report higher diagnosis rates due to increased stress, isolation, or lack of workplace mental health resources. The even distribution across "Corporate" and "Student" categories suggests that workplace or academic environments could affect diagnosis rates similarly.

Higher diagnosed rates in certain countries could be attributed to:

1.  Better access to mental health services and awareness campaigns.

2.  Cultural differences in reporting or seeking help for mental health issues.

3.  Lower diagnosed rates in some regions might be due to stigma, lack of resources, or under reporting.
:::

### Time Series Decomposition Analysis

::: {style="text-align:justify;"}
The Time Series depicts a Seasonal Decomposition of Treatment Rate, with the components of the time series displayed over time: Observed, Trend, Seasonal, and Remainder. Here's an interpretation of each:

### 1. Observed

-   This is the raw time series data (treatment rate) as observed in the dataset. It shows how treatment rates vary over time, reflecting both systematic patterns and random fluctuations.

### 2. Trend

-   The trend component represents the long-term progression of the treatment rate.
-   **Interpretation**: A rising or falling trend indicates an overall increase or decrease in treatment rates over the observed period. In this case, the trend shows periodic peaks and valleys, which may suggest external factors influencing the treatment rates cyclically.

### 3. Seasonal

-   The seasonal component captures repeating patterns or seasonality in the data.
-   **Interpretation**: If the treatment rate is affected by cyclical factors (e.g., monthly or annual trends), this component isolates that pattern. In this plot, the seasonal component shows regular oscillations that could be related to calendar effects (e.g., specific months or times of the year when treatment rates rise or fall).

### 4. Remainder

-   The remainder (or residual) component reflects random noise or unexplained variability in the data after removing the trend and seasonal effects.
-   **Interpretation**: The high frequency and irregularity in this component suggest that some variability in the treatment rates is due to factors not captured by the model (e.g., unexpected external events).

## What This Means for the Dataset

-   **Understanding trends**: If the treatment rates consistently increase or decrease, it could signal systematic changes in behavior, awareness, or external influences like policy changes.

-   **Seasonality insights**: Regular fluctuations in the seasonal component suggest periodic factors (e.g., time of year or external events) driving treatment rates. Investigating these periods can help tailor interventions.

-   **Noise assessment**: A high amount of variability in the remainder component indicates that some factors influencing treatment are unaccounted for and might require further investigation or data collection.

This decomposition aids in better understanding the underlying patterns in the treatment rate data and can guide strategic decisions, such as identifying periods for targeted campaigns or understanding long-term trends.
:::

### Logistic Regression Insights and Heatmap Interpretation

::: {style="text-align:justify;"}
## Insights from Logistic Regression Coefficients

-   **Gender**: Being male significantly reduces the likelihood of being diagnosed (negative coefficient with p \< 0.001).
-   **Country**: Countries like India and Brazil show significantly lower odds of being diagnosed compared to the reference category.
-   **Family History**: A strong positive association (highly significant, p \< 0.001) indicates that individuals with a family history are much more likely to be diagnosed.
-   **Self-Employment**: Self-employed individuals have slightly higher odds of diagnosis.

## Heatmap Interpretation

The confusion matrix heatmap shows the counts for each category of the actual versus predicted values:

-   **Top Left (True Negatives - TN)**: 112,942 cases were correctly predicted as negative (not diagnosed).
-   **Top Right (False Positives - FP)**: 29,476 cases were incorrectly predicted as positive (diagnosed when they were not).
-   **Bottom Left (False Negatives - FN)**: 58,644 cases were incorrectly predicted as negative (not diagnosed when they were).
-   **Bottom Right (True Positives - TP)**: 86,100 cases were correctly predicted as positive (diagnosed).
:::
